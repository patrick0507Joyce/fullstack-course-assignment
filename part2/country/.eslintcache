[{"/Users/patrick/Documents/React/part2/country/src/App.js":"1","/Users/patrick/Documents/React/part2/country/src/components/Countries/Countries.jsx":"2","/Users/patrick/Documents/React/part2/country/src/components/Countries/CountryDetail/CountryDetail.jsx":"3","/Users/patrick/Documents/React/part2/country/src/components/Filter/Filter.jsx":"4","/Users/patrick/Documents/React/part2/country/src/components/Countries/CountryWeather/CountryWeather.jsx":"5","/Users/patrick/Documents/React/part2/country/src/index.js":"6"},{"size":1194,"mtime":1610887528251,"results":"7","hashOfConfig":"8"},{"size":1109,"mtime":1610887701758,"results":"9","hashOfConfig":"8"},{"size":571,"mtime":1610885191274,"results":"10","hashOfConfig":"8"},{"size":251,"mtime":1610881625328,"results":"11","hashOfConfig":"8"},{"size":1299,"mtime":1610895712244,"results":"12","hashOfConfig":"8"},{"size":146,"mtime":1610880652618,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1u037iu",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/patrick/Documents/React/part2/country/src/App.js",[],"/Users/patrick/Documents/React/part2/country/src/components/Countries/Countries.jsx",["28"],"import React, { useEffect } from \"react\";\nimport CountryDetail from \"./CountryDetail/CountryDetail\";\nimport CountryWeather from \"./CountryWeather/CountryWeather\";\n\nconst Countries = ({ searchResults, setSearchResults }) => {\n  const searchResultsOnClick = (countryName) => {\n    return () => {\n        setSearchResults(searchResults.filter(searchResult => searchResult.name === countryName));\n    }\n  }\n\n  if (searchResults.length > 10) {\n    return <p>Too many matches, specify another filter</p>;\n  } else if (searchResults.length === 1) {\n    const countryDataInDetail = searchResults[0];\n    return (\n        <div>\n            <CountryDetail countryDataInDetail={countryDataInDetail} />\n            <CountryWeather countryCapitalName={countryDataInDetail.capital}/>\n        </div>\n    );\n  } else {\n    return (\n      <div>\n        {searchResults.map((country, index) => (\n          <p key={index}>\n            {country.name}\n            &nbsp;\n            <button onClick={searchResultsOnClick(country.name)}>show</button>\n          </p>\n        ))}\n      </div>\n    );\n  }\n};\n\nexport default Countries;\n","/Users/patrick/Documents/React/part2/country/src/components/Countries/CountryDetail/CountryDetail.jsx",["29"],"/Users/patrick/Documents/React/part2/country/src/components/Filter/Filter.jsx",[],"/Users/patrick/Documents/React/part2/country/src/components/Countries/CountryWeather/CountryWeather.jsx",["30","31"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst CountryWeather = ({ countryCapitalName }) => {\n\n  const weatherApiKey = process.env.REACT_APP_WEATHER_API_KEY;\n    const [weather, setWeather] = useState('');\n\n    const weatherHook = () => {\n        axios\n        .get(\n            `http://api.weatherstack.com/current?access_key=${weatherApiKey}&query=${countryCapitalName}`\n        )\n        .then((response) => {\n            console.log(response);\n            const currentData = response.data.current;\n            console.log(currentData.weather_icons);\n            setWeather({\n                temperature:currentData.temperature,\n                windDegree: currentData.wind_degree,\n                windDirection: currentData.wind_dir,\n                weatherImageUrl: currentData.weather_icons,\n            })\n        });\n    };\n\n    useEffect(weatherHook, []);\n\n  return (\n    <div>\n        <p><b>temperature:</b> &nbsp;{weather.temperature} Celcius</p>\n        <img src={weather.weatherImageUrl} />\n        <p>\n            <b>wind:</b> \n            &nbsp; \n            {weather.windDegree} \n            &nbsp; \n            direction \n            &nbsp; \n            {weather.windDirection}\n        </p>\n    </div>\n  );\n};\n\nexport default CountryWeather;\n","/Users/patrick/Documents/React/part2/country/src/index.js",[],{"ruleId":"32","severity":1,"message":"33","line":1,"column":17,"nodeType":"34","messageId":"35","endLine":1,"endColumn":26},{"ruleId":"36","severity":1,"message":"37","line":17,"column":7,"nodeType":"38","endLine":17,"endColumn":70},{"ruleId":"39","severity":1,"message":"40","line":27,"column":28,"nodeType":"41","endLine":27,"endColumn":30,"suggestions":"42"},{"ruleId":"36","severity":1,"message":"37","line":32,"column":9,"nodeType":"38","endLine":32,"endColumn":46},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'countryCapitalName' and 'weatherApiKey'. Either include them or remove the dependency array.","ArrayExpression",["43"],{"desc":"44","fix":"45"},"Update the dependencies array to be: [countryCapitalName, weatherApiKey]",{"range":"46","text":"47"},[900,902],"[countryCapitalName, weatherApiKey]"]